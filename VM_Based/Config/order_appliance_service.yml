---
- name: Get the service template for vmdb
  uri:
    url: "https://{{cfme_appliance}}/api/service_templates?expand=resources&filter[]=name={{template_name}}"
    method: GET
    validate_certs: no
    headers:
      X-Auth-Token: "{{ manageiq_auth.json.auth_token }}"
    body_format: json
    status_code: 200
  register: service_template

- name: Save the service template id fact
  set_fact:
    cacheable: True
    service_template_id: "{{ service_template.json.resources[0].id}}"

- name: Order the service
  uri:
    url: "https://{{cfme_appliance}}/api/service_catalogs/{{service_catalog_id}}/service_templates"
    method: POST
    body_format: json
    body:
      action: order
      resource:
        href: "https://{{cfme_appliance}}/api/service_templates/{{service_template_id}}"
        dialog_credential: "{{credential.json.resources[0].id}}"
        dialog_hosts: "{{item}}"
        dialog_param_miq_appliance_hostname: "{{ hostvars[item].miq_appliance_hostname }}"
        dialog_param_miq_private_ip: "{{hostvars[item].private_ip}}"
        dialog_param_vmdb_private_ip: "{{hostvars[item].vmdb_private_ip}}"
    validate_certs: no
    headers:
      X-Auth-Token: "{{ manageiq_auth.json.auth_token }}"
    status_code: 200
  register: service_item

- name: Save the request id fact
  set_fact:
    cacheable: True
    request_id: "{{ service_item.json.results[0].id}}"

- name: Track the order
  uri:
    url: "https://{{cfme_appliance}}/api/service_requests/{{request_id}}?expand=request_tasks"
    method: GET
    validate_certs: no
    headers:
      X-Auth-Token: "{{ manageiq_auth.json.auth_token }}"
    status_code: 200
  register: service_tracking
  until: service_tracking.json.status == "Ok" and service_tracking.json.request_state == "finished"
  retries: 150
  delay: 50
