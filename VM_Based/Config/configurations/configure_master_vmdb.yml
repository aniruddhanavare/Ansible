# Ansible playbook that uses appliance_console_cli, plus existing
# Ansible modules, to provision a freshly deployed CloudForms manageIQ appliance.
#

# this play performs initial sysadmin for newly created CFME appliances
# we set a non-default root password, install a public key for ansible,

- hosts: all
  tasks: 
  - name : Reset password for {{ miq_appliance_hostname }}
    include_tasks: reset-default-password.yml

  - name: Set hostname
    hostname: 
      name: "{{ miq_appliance_hostname }}" 

  - name: Synchronize time
    become: yes
    service:
      name: 'chronyd'
      enabled: 'yes'
      state: 'started'
    tags: 'chrony-service'

  - name: Restore default database configuration file
    command: " {{ item }} "
    with_items: 
      - systemctl stop evmserverd
      - cd {{ cfme_vmdb_default_folder }}
      - \cp {{ cfme_vmdb_default_folder }}/config/database.pg.yml {{ cfme_vmdb_default_folder }}/config/database.yml
      #- systemctl stop $APPLIANCE_PG_SERVICE
      #- systemctl disable $APPLIANCE_PG_SERVICE
      #- systemctl enable $APPLIANCE_PG_SERVICE
      #- systemctl start $APPLIANCE_PG_SERVICE
      - systemctl restart $APPLIANCE_PG_SERVICE
      - su - postgres -c "dropdb  -U root  vmdb_production --if-exists"
  
  - name: Reset configured database
    ansible.builtin.shell:
      chdir: "{{ cfme_vmdb_default_folder }}"
      cmd: DISABLE_DATABASE_ENVIRONMENT_CHECK=1 bin/rake evm:db:region -- --region={{ miq_region }}

  - name: Disable database server
    ansible.builtin.shell:
      cmd: systemctl disable evmserverd

  - include_tasks: update_pg_hba_conf.yml

  - name: Reboot
    reboot:

  - name: Configure database replication
    shell: >
      appliance_console_cli
      --replication={{ replication_type }}
      --primary-host={{ miq_private_ip }}
      --cluster-node-number={{ miq_cluster_node_number }}
      --auto-failover
      --username={{ cfme_db_user }}
      --password={{ cfme_db_pass }}

  - name: Database replication status
    command: 'su - postgres -c "repmgr cluster show"'
    register: repmgrCluster  

  - debug: msg="{{ repmgrCluster.stdout_lines }}"

