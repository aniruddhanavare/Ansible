---
- name: Create File
  gather_facts: no
  hosts: localhost
  tasks:

    - name: Create a virtual machine from a template
      community.vmware.vmware_guest:
        hostname: "{{ lookup('env', 'VMWARE_HOST') }}"
        username: "{{ lookup('env', 'VMWARE_USER') }}"
        password: "{{ lookup('env', 'VMWARE_PASSWORD') }}"
        validate_certs: no
        datacenter: "{{ datacenter }}"
        cluster: "{{ cluster }}"
        folder: "/{{ folder }}"
        name: "{{ vm_name }}"
        state: poweredon
        template: "{{ template }}"
        disk:
        - size_gb: "{{ disk_size }}"
          type: thin
          autoselect_datastore: yes
        hardware:
          memory_mb: "{{ vm_memory }}"
          num_cpus: "{{ vm_cpus }}"
          scsi: paravirtual
        networks:
        - name: "{{ network_name }}"
          ip: "{{ network_ip }}"
          netmask: "{{ network_netmask }}"
          device_type: "{{ network_device_type }}"
          domain: "{{ network_domain }}"
          gateway: "{{ network_gateway }}"
          dns_servers:
          - "{{ network_dns_server }}"
          - 8.8.8.8          
        customization:
          dns_servers:
          - "{{ network_dns_server }}"
          - 8.8.8.8 
          domain: "{{ network_domain }}"          
        wait_for_ip_address: yes
        wait_for_ip_address_timeout: 60
      delegate_to: localhost
      register: deploy
     
    - name: Modify Subscription-Manager
      community.vmware.vmware_vm_shell:
        hostname: "{{ lookup('env', 'VMWARE_HOST') }}"
        username: "{{ lookup('env', 'VMWARE_USER') }}"
        password: "{{ lookup('env', 'VMWARE_PASSWORD') }}"
        datacenter: "{{ datacenter }}"
        validate_certs: no
        vm_username: "{{ vm_username }}"
        vm_password: "{{ vm_password }}"       
        vm_id: "{{ vm_name }}"
        vm_shell: "/usr/bin/subscription-manager"
        vm_shell_args: " refresh;  /usr/bin/subscription-manager repos --enable=*"
        vm_shell_cwd: "/usr/bin"
      delegate_to: localhost
      register: shell_command_output


    - name: Copy Attach Script
      community.vmware.vmware_guest_file_operation:
        hostname: "{{ lookup('env', 'VMWARE_HOST') }}"
        username: "{{ lookup('env', 'VMWARE_USER') }}"
        password: "{{ lookup('env', 'VMWARE_PASSWORD') }}"
        datacenter: "{{ datacenter }}"
        validate_certs: no
        vm_id: "{{ vm_name }}"
        vm_username: "{{ vm_username }}"
        vm_password: "{{ vm_password }}"
        copy:
            src: "files/attachHost-satlocationcloudforms.sh"
            dest: "/tmp/attach.sh"
            overwrite: False
      delegate_to: localhost      

    - name: Run Attach Script
      community.vmware.vmware_vm_shell:
        hostname: "{{ lookup('env', 'VMWARE_HOST') }}"
        username: "{{ lookup('env', 'VMWARE_USER') }}"
        password: "{{ lookup('env', 'VMWARE_PASSWORD') }}"
        datacenter: "{{ datacenter }}"
        validate_certs: no
        vm_username: "{{ vm_username }}"
        vm_password: "{{ vm_password }}"       
        vm_id: "{{ vm_name }}"
        vm_shell: "/usr/bin/"
        vm_shell_args: " chmod u+x attach.sh; nohup bash /tmp/attach.sh &"
        vm_shell_cwd: "/tmp"
      delegate_to: localhost
      register: shell_command_output       
          